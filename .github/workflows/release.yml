name: Release on Merge to Main

on:
  push:
    branches:
      - main  # Trigger when changes are pushed to the 'main' branch

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Explicitly grant write permissions

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Extract Version
      id: get_version
      run: |
        echo "VERSION=$(python -c 'from llamphouse import __version__; print(__version__)')" >> $GITHUB_ENV

    - name: Build the package
      run: |
        python -m build

    - name: Extract release notes
      id: extract-release-notes
      uses: ffurrer2/extract-release-notes@v2

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ env.VERSION }}
        release_name: "Release v${{ env.VERSION }}"
        body: "${{ steps.extract-release-notes.outputs.release_notes }}"
        draft: false
        prerelease: false

    - name: Publish to PyPI
      env:
        TWINE_USERNAME: "__token__"
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        python -m twine upload dist/*

    - name: Set up Git user identity
      run: |
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git config --global user.name "github-actions[bot]"

    - name: Merge main into dev
      run: |
        git checkout dev
        git pull origin dev
        git merge --no-ff main -m "Merge main into dev"
        git push origin dev